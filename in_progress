--- BASIC ---
# Connecting to the server
# What the script does and how to install and run it
# Creating a new user (sudo privlages)
# what are ports and how to open/close them

# basics of UFW

--- Advanced ---
# Connecting to the server
# Updating and installing auto-update

# Installing and configuring Fail2Ban
# Installing and configuring UFW
# Creating a new user and disabling root on SSHD
# Making SSH Keys
# Installing and configuring PortSentry
# Installing and configuring SSHGuard
# Installing and Running RKHunter
# Installing and configuring OpenVAS and other vulnerability scanners
# IDS vs IPS
# how to check for open ports
# how to view process running
# how to view who is connected to the server
# WireGuard or OpenVPN and how to install both




[Title] Advanced CyberSecurity Guide (Linux)

## Connecting to the Server

If you have never connected to your server's Command Line Interface (CLI), this guide will teach you how to connect to the server via SSH (Secure Shell Protocol).

There are a few ways to SSH into a server. You can either use your computer's terminal/command prompt or install an SSH client such as PuTTY or Termius.

**Links to SSH Clients:**
![PuTTY](</Pictures/Basic_Sec_Guide/Basic_Sec_Guide1.png>)
- [PuTTY](https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html)

![Termius](</Pictures/Basic_Sec_Guide/Basic_Sec_Guide2.png>)
- [Termius](https://account.termius.com/)

In this example, we will use the IP Address 192.168.1.2, the default SSH port is 22, the username is "root," and the password is "myguide".

**How to SSH with PuTTY:**
1. Download and install PuTTY from the provided link.
2. Launch PuTTY.
3. Enter the server's IP address and port number.
4. Select the SSH connection type.
5. Click "Open" to establish the SSH connection.

![SSH with PuTTY](</Pictures/Basic_Sec_Guide/Basic_Sec_Guide3.png>)

**How to SSH with Termius:**
1. Install Termius from the provided link.
2. Launch Termius.
3. Create a new host and enter the server's IP address, port number, username, and password.
4. Save the host configuration.
5. Connect to the server by selecting the saved host.

![SSH with Termius](</Pictures/Basic_Sec_Guide/Basic_Sec_Guide4.png>)


## Updating and installing unattended-upgrades

Once you successfully log into your Linux server, we will want to go ahead and Update as well as Upgrade your servers software.
We can do that by running the following command.

```shell
root@guide:~# sudo apt-get update -y && sudo apt-get upgrade -y
```

Once you have successfully updated and upgraded your software we can now go ahead and download a tool called autoupdate which will help automatically update your server on a schedule and can also be configured to automatically reboot your system once updates are complete.

We can install this software by running the following command

```shell
root@guide:~# sudo apt-get install unattended-upgrades -y
```

Once this has been installed we can go ahead and go into the configuration files and start changing the settings.
Run the following command to start editing the config files

```shell
root@guide:~# sudo nano /etc/apt/apt.conf.d/50unattended-upgrades
```
once we are in here you can add the following lines to the end of the config file

```shell
1 Unattended-Upgrade::Allowed-Origins {
2 	"${distro_id}:${distro_codename}";
3 	"${distro_id}:${distro_codename}-security";
4 	"${distro_id}ESMApps:${distro_codename}-apps-security";
5 	"${distro_id}ESM:${distro_codename}-infra-security";
6 	"${distro_id}:${distro_codename}-updates";
7 	"${distro_id}:${distro_codename}-proposed";
8 	"${distro_id}:${distro_codename}-backports";
9 };
10
11 Unattended-Upgrade::Remove-Unused-Dependencies "true";
12 Unattended-Upgrade::Automatic-Reboot "false";
13 
14 Unattended-Upgrade::RandomSleep "0";
15 Unattended-Upgrade::Periodic-Packages-Update-Interval "1";
16 Unattended-Upgrade::Periodic-Upgrade "1";
17 Unattended-Upgrade::Origins-Pattern "";
```
With these current settings, the server will automatically update your system every `1` hours and will not allow an automatic reboot of the server. 

If you would like to have it automatically reboot the system you can change on line `12` from `Unattended-Upgrade::Automatic-Reboot "false";` to `Unattended-Upgrade::Automatic-Reboot "true";;` and this will automatically reboot the system if the update requires it to.

If you want to make the server automatically update every `3` hours you can change it on line `15` from `Unattended-Upgrade::Periodic-Packages-Update-Interval "1";` to `Unattended-Upgrade::Periodic-Packages-Update-Interval "3";`

If you want it to update at a specific time go ahead and add this line to it `Unattended-Upgrade::Automatic-Reboot-Time "12:00";` This will update the server everyday at 12:00 PM local time for the server.


## Installing and Configuring Fail2Ban

Fail2Ban is a open source IPS (Intrusion Prevention System) that helps protect against unauthorized attacks. Fail2Ban monitors log files and searches for patterns that would indicate malicious activity and can also help by "banning" or deny traffic from an IP address that is constantly getting failed login attempts.

We can install this software by doing the following
```bash
root@guide:~# sudo apt-get install fail2ban
```



































